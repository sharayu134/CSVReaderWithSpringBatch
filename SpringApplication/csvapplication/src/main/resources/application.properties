#spring.jpa.hibernate.ddl-auto=none
spring.datasource.url=jdbc:mysql://localhost:3306/csvdatabase?user=user&password=password
#debug=true
#logging.levelcom.finzly.csvapplication.rest.MarginedRatesController = DEBUG
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.hibernate.ddl-auto= update
spring.batch.job.enabled=false

spring.batch.initialize-schema=ALWAYS

#Spring Batch Configurations

#csvResourceFileName=src/main/resources/ten_Lac_records.csv
#csvResourceFileName=src/main/resources/ten_thousand_records.csv
#maximumItemCount=1000000
##skipping header here
#numberOfLinesToSkip=1  
#delimiter=,
#fieldNames={ "DATE", "CURRENCY_NAME", "CURRENCY_CODE","TERMS","INTERNAL_SPOT_RATE","BUY_RATE","SELL_RATE","BOSS_RATE","CUTOFF_TIME" }
#chunkSize=1000
#corePoolSize=100
#maximumPoolSize=100
#queueCapacity=200

spring.cloud.config.server.git.uri=https://github.com/sharayu134/SpringBatchConfig

spring.cloud.config.server.git.uri=file://C:\\Users\\pranali.kole\\Desktop\\New folder\\springBatchGitRepo

#     flatFileItemReader.setResource(new FileSystemResource("src/main/resources/ten_thousand_records.csv"));//4s172ms
#     flatFileItemReader.setResource(new FileSystemResource("src/main/resources/one_Lac_records.csv"));//22sec
#     flatFileItemReader.setResource(new FileSystemResource("src/main/resources/five_Lac_records.csv"));//1minsseven_Lac_records.csv
#     flatFileItemReader.setResource(new FileSystemResource("src/main/resources/seven_Lac_records.csv"));//1min50sec
   
#     flatFileItemReader.setResource(new FileSystemResource("src/main/resources/ten_Lac_records.csv"));//2minscsvResourceFileName
#     spring batch with no multithreading 10L records in 5mins 
    